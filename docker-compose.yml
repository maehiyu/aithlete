version: '3.9'
services:

  # frontend:
  #   build: ./frontend
  #   environment:
  #     REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api
  #     # - ws
  #     - broker
  broker:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PORT=${BROKER_PORT}
      - REDIS_PASSWORD=${BROKER_PASSWORD}
      - REDIS_DB=${BROKER_DB}
    volumes:
      - broker_data:/data
  api:
    build: ./api
    environment:
      - DB_HOST=db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=5432
      - NOSQL_HOST=nosql
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_DB=${BROKER_DB}
      - COGNITO_REGION=${COGNITO_REGION}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
    ports:
      - "8000:8000"
    depends_on:
      - db
      # - 
      - broker

  ws:
    build: ./ws
    environment:
      - DB_HOST=db
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_DB=${BROKER_DB}
      - COGNITO_REGION=${COGNITO_REGION}
      - COGNITO_USER_POOL_ID=${COGNITO_USER_POOL_ID}
    ports:
      - "9000:9000"
    depends_on:
      - db
      - broker

  rag:
    build: ./rag
    environment:
      - DB_HOST=db
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_DB=${BROKER_DB}
    ports:
      - "9200:9200"
    depends_on:
      - db
      - broker

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./api/init.sql:/docker-entrypoint-initdb.d/init.sql

  weaviate:
    image: semitechnologies/weaviate:1.25.3
    restart: always
    ports:
      - "8080:8080" # REST API
      - "50051:50051" # gRPC API
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      # embeddingを自前で生成する場合はvectorizer=none
    volumes:
      - weaviate_data:/var/lib/weaviate
  storage:
    image: minio/minio:latest
    command: server /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9001:9000"
    volumes:
      - minio_data:/data

  embedding:
    build: ./embedding
    ports:
      - "8001:8001"
    restart: always

volumes:
  db_data:
  minio_data:
  broker_data:
  weaviate_data:
